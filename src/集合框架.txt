集合类的由来：
  对象用于封装特有的数据，对象多了需要存储。若果对象的个数不确定，就需要容器进行储存。
  
  集合的特点;
  1.用于储存对象的容器。
  2.集合的昌都市可变的。
  3.集合不可以储存基本数据类型。
  
 集合容器因为内部的数据结构不同，有多种结具体容器。
 不断地向上抽取，就形成集合框架。
 集合的顶层colection的常见方法：
 1.添加：
   boolean add(Object obj);
   boolean addAll(Collection coll)
 2.删除：
   boolean remove(object obj)
   boolean removeAll(collection coll)
   void clear();
 3.判断：
   Boolean contains(object obj)
   booealn containsAll(collection coll);
   boolean isEampy();判断集合中是否有元素。
 4.获取：
   int size（）；
   Iterator iterator();//取出元素的方法，迭代器。
       该对象必须依赖具体的容器，因为每个容器的数据结构不同。
       所以该迭代器对象实在容器中进行内部实现的。
       对于只用这而言具体的实现是不重要的，只要通过的容器获取到高实现的迭代器的对象即可。
   也就是iterator的方法。
   
   Iterator接口就是对所有collection容器进行元素取出的公共接口。
 5.其他
   booleanretainAll(Collection coll);去交集
   object to Array();将集合转换成数组。
   
   Collection：
   1--List：有序的（存入和取出的顺序是一致的），元素都有索引（角标），元素可以重复。
   1--set：元素不能重复。
   
   list特有常见的方法：有一个共同的特点就是都可以操作角标
   1.添加
   void add(index,element)
   void add(index,collection)
   
   2.删除
   boject remove(index)
   
   3. 修改
   object set（index，element）
   
   4.获取
   Object get(index)
   int indexOf(Object)
   int lastIndexOf(object);
   list subList(start,end);
   
   list可以完成对元素的增删改查。
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   